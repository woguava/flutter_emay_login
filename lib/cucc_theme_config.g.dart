// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'cucc_theme_config.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

CUCCThemeConfig _$CUCCThemeConfigFromJson(Map<String, dynamic> json) {
  return CUCCThemeConfig(
    backgroundColor: json['backgroundColor'] as int,
    bgImage: json['bgImage'] as String,
    controllerType: json['controllerType'] as int,
    navBottomLineHidden: json['navBottomLineHidden'] as bool,
    navBarHidden: json['navBarHidden'] as bool,
    navTranslucent: json['navTranslucent'] as bool,
    navBgColor: json['navBgColor'] as int,
    navColor: json['navColor'] as int,
    navBgImage: json['navBgImage'] as String,
    navText: json['navText'] as String,
    navTextFont: json['navTextFont'] as int,
    navTextColor: json['navTextColor'] as int,
    navReturnImg: json['navReturnImg'] as String,
    navCustomBtnHidden: json['navCustomBtnHidden'] as bool,
    navCustomBtnText: json['navCustomBtnText'] as String,
    navCustomBtnTextColor: json['navCustomBtnTextColor'] as int,
    navCustomBtnTextSize: json['navCustomBtnTextSize'] as int,
    topCustomHeight: json['topCustomHeight'] as int,
    logoImgPath: json['logoImgPath'] as String,
    logoWidth: json['logoWidth'] as int,
    logoHeight: json['logoHeight'] as int,
    logoOffsetY: json['logoOffsetY'] as int,
    appNameHidden: json['appNameHidden'] as bool,
    appNameColor: json['appNameColor'] as int,
    appNameFont: json['appNameFont'] as int,
    appNameOffsetY: json['appNameOffsetY'] as int,
    numberColor: json['numberColor'] as int,
    numberFont: json['numberFont'] as int,
    numFieldOffsetY: json['numFieldOffsetY'] as int,
    brandColor: json['brandColor'] as int,
    brandFont: json['brandFont'] as int,
    brandOffsetY: json['brandOffsetY'] as int,
    brandHidden: json['brandHidden'] as bool,
    logBtnText: json['logBtnText'] as String,
    logBtnTextFont: json['logBtnTextFont'] as int,
    logBtnTextColor: json['logBtnTextColor'] as int,
    logBtnOffsetY: json['logBtnOffsetY'] as int,
    logBtnRadius: json['logBtnRadius'] as int,
    logBtnUsableBGColor: json['logBtnUsableBGColor'] as int,
    logBtnUnusableBGColor: json['logBtnUnusableBGColor'] as int,
    logBtnLeading: json['logBtnLeading'] as int,
    logBtnHeight: json['logBtnHeight'] as int,
    switchAccHidden: json['switchAccHidden'] as bool,
    switchText: json['switchText'] as String,
    switchAccTextColor: json['switchAccTextColor'] as int,
    swithAccTextFont: json['swithAccTextFont'] as int,
    switchOffsetY: json['switchOffsetY'] as int,
    swithAccOffsetX: json['swithAccOffsetX'] as int,
    swithAccTextAlignment: json['swithAccTextAlignment'] as int,
    checkBoxHidden: json['checkBoxHidden'] as bool,
    checkBoxValue: json['checkBoxValue'] as bool,
    checkBoxWidth: json['checkBoxWidth'] as int,
    checkBoxCheckedImg: json['checkBoxCheckedImg'] as String,
    checkBoxNormalImg: json['checkBoxNormalImg'] as String,
    privacyOffsetY: json['privacyOffsetY'] as int,
    privacyTextColor: json['privacyTextColor'] as int,
    privacyColor: json['privacyColor'] as int,
    appFPrivacyId: json['appFPrivacyId'] as String,
    appFPrivacyText: json['appFPrivacyText'] as String,
    appFPrivacyUrl: json['appFPrivacyUrl'] as String,
    appSPrivacyId: json['appSPrivacyId'] as String,
    appSPrivacyText: json['appSPrivacyText'] as String,
    appSPrivacyUrl: json['appSPrivacyUrl'] as String,
    checkBoxOffsetY: json['checkBoxOffsetY'] as int,
    privacyTextAlignment: json['privacyTextAlignment'] as int,
    loadingText: json['loadingText'] as String,
    loadingTextColor: json['loadingTextColor'] as int,
    loadingTextFont: json['loadingTextFont'] as int,
    loadingTextHeight: json['loadingTextHeight'] as int,
    loadingBgWidth: json['loadingBgWidth'] as int,
    loadingBgHeight: json['loadingBgHeight'] as int,
    loadingBgRadius: json['loadingBgRadius'] as int,
    loadingBgColor: json['loadingBgColor'] as int,
    ifAddPrivacyPageBG: json['ifAddPrivacyPageBG'] as bool,
    tipOffsetY: json['tipOffsetY'] as int,
  );
}

Map<String, dynamic> _$CUCCThemeConfigToJson(CUCCThemeConfig instance) =>
    <String, dynamic>{
      'backgroundColor': instance.backgroundColor,
      'bgImage': instance.bgImage,
      'controllerType': instance.controllerType,
      'navBottomLineHidden': instance.navBottomLineHidden,
      'navBarHidden': instance.navBarHidden,
      'navTranslucent': instance.navTranslucent,
      'navBgColor': instance.navBgColor,
      'navColor': instance.navColor,
      'navBgImage': instance.navBgImage,
      'navText': instance.navText,
      'navTextFont': instance.navTextFont,
      'navTextColor': instance.navTextColor,
      'navReturnImg': instance.navReturnImg,
      'navCustomBtnHidden': instance.navCustomBtnHidden,
      'navCustomBtnText': instance.navCustomBtnText,
      'navCustomBtnTextColor': instance.navCustomBtnTextColor,
      'navCustomBtnTextSize': instance.navCustomBtnTextSize,
      'topCustomHeight': instance.topCustomHeight,
      'logoImgPath': instance.logoImgPath,
      'logoWidth': instance.logoWidth,
      'logoHeight': instance.logoHeight,
      'logoOffsetY': instance.logoOffsetY,
      'appNameHidden': instance.appNameHidden,
      'appNameColor': instance.appNameColor,
      'appNameFont': instance.appNameFont,
      'appNameOffsetY': instance.appNameOffsetY,
      'numberColor': instance.numberColor,
      'numberFont': instance.numberFont,
      'numFieldOffsetY': instance.numFieldOffsetY,
      'brandColor': instance.brandColor,
      'brandFont': instance.brandFont,
      'brandOffsetY': instance.brandOffsetY,
      'brandHidden': instance.brandHidden,
      'logBtnText': instance.logBtnText,
      'logBtnTextFont': instance.logBtnTextFont,
      'logBtnTextColor': instance.logBtnTextColor,
      'logBtnOffsetY': instance.logBtnOffsetY,
      'logBtnRadius': instance.logBtnRadius,
      'logBtnUsableBGColor': instance.logBtnUsableBGColor,
      'logBtnUnusableBGColor': instance.logBtnUnusableBGColor,
      'logBtnLeading': instance.logBtnLeading,
      'logBtnHeight': instance.logBtnHeight,
      'switchAccHidden': instance.switchAccHidden,
      'switchText': instance.switchText,
      'switchAccTextColor': instance.switchAccTextColor,
      'swithAccTextFont': instance.swithAccTextFont,
      'switchOffsetY': instance.switchOffsetY,
      'swithAccOffsetX': instance.swithAccOffsetX,
      'swithAccTextAlignment': instance.swithAccTextAlignment,
      'checkBoxHidden': instance.checkBoxHidden,
      'checkBoxValue': instance.checkBoxValue,
      'checkBoxWidth': instance.checkBoxWidth,
      'checkBoxCheckedImg': instance.checkBoxCheckedImg,
      'checkBoxNormalImg': instance.checkBoxNormalImg,
      'privacyOffsetY': instance.privacyOffsetY,
      'privacyTextColor': instance.privacyTextColor,
      'privacyColor': instance.privacyColor,
      'appFPrivacyId': instance.appFPrivacyId,
      'appFPrivacyText': instance.appFPrivacyText,
      'appFPrivacyUrl': instance.appFPrivacyUrl,
      'appSPrivacyId': instance.appSPrivacyId,
      'appSPrivacyText': instance.appSPrivacyText,
      'appSPrivacyUrl': instance.appSPrivacyUrl,
      'checkBoxOffsetY': instance.checkBoxOffsetY,
      'privacyTextAlignment': instance.privacyTextAlignment,
      'loadingText': instance.loadingText,
      'loadingTextColor': instance.loadingTextColor,
      'loadingTextFont': instance.loadingTextFont,
      'loadingTextHeight': instance.loadingTextHeight,
      'loadingBgWidth': instance.loadingBgWidth,
      'loadingBgHeight': instance.loadingBgHeight,
      'loadingBgRadius': instance.loadingBgRadius,
      'loadingBgColor': instance.loadingBgColor,
      'ifAddPrivacyPageBG': instance.ifAddPrivacyPageBG,
      'tipOffsetY': instance.tipOffsetY,
    };
